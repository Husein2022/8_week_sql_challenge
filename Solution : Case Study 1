1) What is the total amount each customer spent at the restaurant?

SELECT sales.customer_id, SUM(price) AS total_spent
FROM prismatic-grail-337610.dannys_diner.sales
LEFT JOIN prismatic-grail-337610.dannys_diner.menu
ON sales.product_id = menu.product_id
GROUP BY sales.customer_id

OUTPUT - 
Row	customer_id	total_spent	
1      	A         76
2     	B         74
3       C         36


2) How many days has each customer visited the restaurant?

SELECT customer_id, COUNT (DISTINCT order_date) as no_of_days
FROM prismatic-grail-337610.dannys_diner.sales
GROUP BY customer_id

OUTPUT - 
Row	customer_id	no_of_days	
1        A         4
2        B         6
3        C         2


3) What was the first item from the menu purchased by each customer?

SELECT DISTINCT sales.customer_id, sales.order_date, menu.product_name, RANK() OVER (PARTITION BY customer_id ORDER BY order_date) AS rank
FROM prismatic-grail-337610.dannys_diner.sales
JOIN prismatic-grail-337610.dannys_diner.menu
ON sales.product_id = menu.product_id
ORDER BY rank, customer_id

                OR
                    
 WITH final_table as (
 SELECT DISTINCT sales.customer_id, sales.order_date, menu.product_name, RANK() OVER (PARTITION BY customer_id ORDER BY order_date) AS rank
 FROM prismatic-grail-337610.dannys_diner.sales
 JOIN prismatic-grail-337610.dannys_diner.menu
 ON sales.product_id = menu.product_id
 ORDER BY rank, customer_id
)
SELECT customer_id,product_name
FROM final_table
WHERE rank = 1

OUTPUT - 
Row	customer_id	product_name	
1	     A          curry
2	     A          sushi
3	     B          curry
4	     C          ramen


4) What is the most purchased item on the menu and how many times was it purchased by all customers?

First we'll find out the most purchased item on the menu :

SELECT COUNT(sales.product_id) AS product_count, product_name
FROM prismatic-grail-337610.dannys_diner.sales
JOIN prismatic-grail-337610.dannys_diner.menu
ON sales.product_id = menu.product_id
GROUP BY sales.product_id, product_name
ORDER BY product_count

OUTPUT - 
Row	product_count	product_name	
1	     3            sushi
2	     4            curry
3	     8            ramen

Clearly RAMEN was the most purchased item, now we'll find out how many times it was purchased by all customers:

SELECT customer_id, COUNT(sales.product_id) AS product_count, menu.product_name
FROM prismatic-grail-337610.dannys_diner.sales
JOIN prismatic-grail-337610.dannys_diner.menu
ON sales.product_id = menu.product_id
WHERE menu.product_name = 'ramen'
GROUP BY customer_id, menu.product_name

OUTPUT - 
Row	customer_id	product_count	product_name	
1	      A             3          ramen
2	      B             2          ramen
3	      C             3          ramen


5) Which item was the most popular for each customer?

SELECT customer_id, COUNT(sales.product_id) AS product_count, product_name
FROM prismatic-grail-337610.dannys_diner.sales
JOIN prismatic-grail-337610.dannys_diner.menu
ON sales.product_id = menu.product_id
GROUP BY customer_id, sales.product_id, product_name
ORDER BY customer_id

OUTPUT - 
Row	customer_id	product_count	product_name	
1	      A             1         sushi
2	      A             2         curry
3	      A             3         ramen
4	      B             2         curry
5	      B             2         sushi
6	      B             2         ramen
7	      C             3         ramen

As can been seen customer A and C likes Ramen which they've ordered 3 times but customer B likes all the dishes Curry, Sushi, Ramen since he/she has ordered those equally.


6) Which item was purchased first by the customer after they became a member?

WITH table AS (
    SELECT m.customer_id, m.join_date, s.product_id, s.order_date, RANK() OVER (PARTITION BY m.customer_id ORDER BY order_date) AS rank
    FROM prismatic-grail-337610.dannys_diner.members AS m
    JOIN prismatic-grail-337610.dannys_diner.sales AS s
    ON s.customer_id = m.customer_id
    WHERE s.order_date >= m.join_date)
SELECT customer_id, join_date, menu.product_name, order_date
FROM table
JOIN prismatic-grail-337610.dannys_diner.menu
ON table.product_id = menu.product_id
WHERE rank = 1
ORDER BY customer_id

OUTPUT - 
Row	customer_id	join_date	  product_name	order_date	
1         A     2021-01-07    curry       2021-01-07
2	        B     2021-01-09    sushi       2021-01-11

Customer A ordered CURRY and B ordered SUSHI after becoming members.


7) Which item was purchased just before the customer became a member?

WITH table AS (
    SELECT m.customer_id, m.join_date, s.product_id, s.order_date, RANK() OVER (PARTITION BY m.customer_id ORDER BY order_date DESC) AS rank
    FROM prismatic-grail-337610.dannys_diner.members AS m
    JOIN prismatic-grail-337610.dannys_diner.sales AS s
    ON s.customer_id = m.customer_id
    WHERE s.order_date < m.join_date)
SELECT customer_id, join_date, order_date, menu.product_name
FROM table
JOIN prismatic-grail-337610.dannys_diner.menu
ON table.product_id = menu.product_id
WHERE rank = 1

OUTPUT - 
Row	customer_id	  join_date	  order_date	product_name	
1             A     2021-01-07    2021-01-01    sushi
2	     A      2021-01-07    2021-01-01    curry
3	     B      2021-01-09    2021-01-04    sushi

Before becoming the member customer A had ordered sushi and curry, whereas customer B had ordered sushi.


8) What is the total items and amount spent by each member before they became a member?

WITH table AS (
    SELECT members.customer_id, product_id
    FROM prismatic-grail-337610.dannys_diner.sales
    JOIN prismatic-grail-337610.dannys_diner.members
    ON sales.customer_id = members.customer_id
    WHERE sales.order_date < members.join_date
)
SELECT customer_id,COUNT(table.product_id) AS total_item_ordered, SUM(price) AS total_amount_spent 
FROM table
JOIN prismatic-grail-337610.dannys_diner.menu
ON table.product_id = menu.product_id
GROUP BY customer_id

OUTPUT - 
Row	customer_id	total_item_ordered	total_amount_spent	
1	        A             2                   25
2	        B             3                   40

     OR 

SELECT members.customer_id, COUNT(sales.product_id) AS total_item_ordered, SUM(price) AS total_amount_spent
FROM prismatic-grail-337610.dannys_diner.sales
JOIN prismatic-grail-337610.dannys_diner.members
ON sales.customer_id = members.customer_id
JOIN prismatic-grail-337610.dannys_diner.menu
ON sales.product_id = menu.product_id
WHERE sales.order_date < members.join_date
GROUP BY members.customer_id


9) If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

WITH table AS (
    SELECT product_id, product_name, price, IF (product_name = 'sushi', price * 20, price * 10) AS points
    FROM prismatic-grail-337610.dannys_diner.menu
)
SELECT sales.customer_id, SUM (points) as points_earned
FROM prismatic-grail-337610.dannys_diner.sales
JOIN table
ON sales.product_id = table.product_id
GROUP BY sales.customer_id

OUTPUT - 
Row	customer_id	points_earned	
1         A         860
2	        B         940
3	        C         360


